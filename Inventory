from Tkinter import *
import tkMessageBox
import Tkinter

def get_letters():
    import csv
    import fileinput
    import os
    win=Tk()
    inventorylist = "C:/Users/Rebecca/Desktop/Overland/Ordering Guide.csv"
    brands = csv.reader(open(inventorylist))
    alphab=["Menu"]
    for brand in brands:
        alpha = brand[0][0]
        if alpha not in alphab:
            alphab.append(alpha)
        print alphab
    for letter in alphab:        
        newButtons=Tkinter.Button(win,text=letter)
        newButtons.pack()
        win.title("Overland Inventory")

    mainloop()

get_letters()


#more simple for now

import csv
import fileinput
import os
from datetime import datetime
#import numpy as np
#import matplotlib.pyplot as plt
#import xlwt
    
def get_letters():
    inventorylist = "C:/Users/Rebecca/Desktop/Overland/Ordering Guide.csv"
    brands = csv.reader(open(inventorylist))
    cdate = str(format(datetime.today(),"%Y-%m-%d"))
    file = "C:/Users/Rebecca/Desktop/Overland/Balance_Report/"+cdate+".csv"
    alphab=["X", "DONE"]
    for brand in brands:
        alpha = brand[0][0]
        if alpha not in alphab:
            alphab.append(alpha)
    alphab=alphab[0:2]+sorted(alphab[2:])
    print alphab
    while True:
        letter = raw_input('Enter your brand letter: ')
        l=str(letter).upper()
        if l not in alphab:
            print "                           >>> oops. pick again <<<"
            continue
        else:
            break
    if l=="X" or l=="x":
        exit
        quit
    elif l=="DONE":
        try:
            with open(file,'a') as balrep:
                balrep.close()
            print "OK, Thanks!"
        except:
            print "Nothing Recorded"
            exit
            quit
        get_sums()
    else:
        get_bottles(l)
#need a 'start over or resume'
        

def get_bottles(l):
    bottles=["X"]
    inventorylist = "C:/Users/Rebecca/Desktop/Overland/Ordering Guide.csv"
    brands = csv.reader(open(inventorylist))
    cdate = str(format(datetime.today(),"%Y-%m-%d"))
    file = "C:/Users/Rebecca/Desktop/Overland/Balance_Report/"+cdate+".csv"

    for brand in brands:
        alpha = brand[0][0]
        if alpha == l or alpha == l.lower():
            bottles.append(brand)
    for number, letter in enumerate(bottles,0):
        print'{}{}'.format(number, letter)
    while True:
        bottleindex = raw_input ('Enter bottle number: ')
        print len(bottles)
        if bottleindex=="0" or bottleindex=="X" or bottleindex=="x":
            get_letters()
        #error catch here please
            exit
            quit
        if int(bottleindex) > len(bottles)-1:
            print "                           >>> oops. pick again <<<"
            continue
        else:
            break

    bottle = bottles[int(bottleindex)]
    weightval = raw_input('Enter bottle weight: ')
    try:
        with open(file,'a') as balrep:
            balrep.write(cdate+"\t,"+str(bottle)+"\t,"+weightval+"\n")
            balrep.close()
    except:
        balrep = open(file,"w+")
    get_letters()


def get_sums():
    cdate = str(format(datetime.today(),"%Y-%m-%d"))
    file = "C:/Users/Rebecca/Desktop/Overland/Balance_Report/"+cdate+".csv"
    #with open(file,'r') as bal_rep:
    balancereport = open(file,'r')
    totals=["Bottle","weight1"]
    while True:
        bline=balancereport.readline()
        if not bline: break
        sumfile = "C:/Users/Rebecca/Desktop/Overland/Summary/"+cdate+".csv"
        try:
            curbot=bline.split(',')[1]
            curweight=(bline.split(',')[2])
            if curbot in totals:
                mi= totals.index(curbot)
                prevweight = int(totals[mi+1])
                curweight = int(curweight)
                totals[mi+1]= prevweight+curweight
                print "additional bottle of "+curbot+" added"
            else:
                totals.append(str(curbot))
                totals.append(int(curweight))
        except:
            print str(bline.split(',')) +" error"
    try:
        with open(sumfile,'a') as summary:
            ti=0
            while ti < len(totals):
                bottle=totals[ti]
                weight=str(totals[ti+1])
                ti=ti+2
                summary.write(bottle+"\t,"+weight+"\n")
            summary.close()
            print "opened"
    except:
        summary = open(sumfile,"w+")
        print "printed"


        
get_letters()
